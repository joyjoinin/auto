{"name": "test2_delete_address", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <testcase.wallet_addresses.test_shipping_address.TestShippingAddress testMethod=test2_delete_address>\n\n    @allure.story(\"Delete shipping address\")\n    def test2_delete_address(self) -> None:\n>       address_before_delete = do.find_address_items()\n\ntestcase/wallet_addresses/test_shipping_address.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/user_actions.py:487: in find_address_items\n    items = get_elements_by_xpath(self.driver, address_item)\nutils/find_element.py:45: in get_elements_by_xpath\n    raise e\nutils/find_element.py:39: in get_elements_by_xpath\n    elements = WebDriverWait(driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"01f8e091-1e21-4968-b421-968974aac119\")>\nmethod = <function get_elements_by_xpath.<locals>.<lambda> at 0x10f9fea60>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException"}, "start": 1689820723105, "stop": 1689820734727, "uuid": "744d2a6a-9dfb-4ef1-b3b9-a41fa208e551", "historyId": "1684e85157a54cb8420b7fb518c37b90", "testCaseId": "1684e85157a54cb8420b7fb518c37b90", "fullName": "testcase.wallet_addresses.test_shipping_address.TestShippingAddress#test2_delete_address", "labels": [{"name": "feature", "value": "Shipping address"}, {"name": "story", "value": "Delete shipping address"}, {"name": "parentSuite", "value": "testcase.wallet_addresses"}, {"name": "suite", "value": "test_shipping_address"}, {"name": "subSuite", "value": "TestShippingAddress"}, {"name": "host", "value": "Joys-MacBook-Pro.local"}, {"name": "thread", "value": "8623-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.wallet_addresses.test_shipping_address"}]}