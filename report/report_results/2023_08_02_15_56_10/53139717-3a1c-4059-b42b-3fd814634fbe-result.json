{"name": "test04_create_with_good_password", "status": "broken", "statusDetails": {"message": "ValueError: empty range for randrange() (0, 0, 0)", "trace": "self = <test_create_account.TestAccountCreation testMethod=test04_create_with_good_password>\n\n    @allure.story(\"Good_password creation\")\n    def test04_create_with_good_password(self) -> None:\n        new_account = get_new_account()\n        do.tap_join()\n        sleep(3)\n        do.input_email(new_account)\n        do.input_password(new_account.good_password)\n        do.assert_element(good, 'This is good password')\n        try:\n            get_element(self.driver, weak_prompt, 3)\n        except Exception:\n            print('Not show prompt for good password success')\n        do.assert_element_by_attr(complete, 'enabled', 'true', \"Can complete with good password\")\n        do.tap_complete()\n        sleep(10)\n        do.tap_continue()\n        # sleep(3)\n        # do.tap_enter_access_code()\n        # sleep(3)\n        # do.input_code(new_account.access_code)\n        # do.tap_submit()\n>       do.tap_logos(new_account.logo_select)\n\ntestcase/account_creation/test_create_account.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/user_actions.py:148: in tap_logos\n    logo.locator = logo_list[random.randint(0, len(logo_list) - 1)]\n/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/random.py:338: in randint\n    return self.randrange(a, b+1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <random.Random object at 0x7f8b5a843610>, start = 0, stop = 0, step = 1\n\n    def randrange(self, start, stop=None, step=1):\n        \"\"\"Choose a random item from range(start, stop[, step]).\n    \n        This fixes the problem with randint() which includes the\n        endpoint; in Python this is usually not what you want.\n    \n        \"\"\"\n    \n        # This code is a bit messy to make it fast for the\n        # common case while still doing adequate error checking.\n        istart = int(start)\n        if istart != start:\n            raise ValueError(\"non-integer arg 1 for randrange()\")\n        if stop is None:\n            if istart > 0:\n                return self._randbelow(istart)\n            raise ValueError(\"empty range for randrange()\")\n    \n        # stop argument supplied.\n        istop = int(stop)\n        if istop != stop:\n            raise ValueError(\"non-integer stop for randrange()\")\n        width = istop - istart\n        if step == 1 and width > 0:\n            return istart + self._randbelow(width)\n        if step == 1:\n>           raise ValueError(\"empty range for randrange() (%d, %d, %d)\" % (istart, istop, width))\nE           ValueError: empty range for randrange() (0, 0, 0)\n\n/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/random.py:316: ValueError"}, "attachments": [{"name": "stdout", "source": "3be8996f-4241-451b-b9ce-b7adaa771af8-attachment.txt", "type": "text/plain"}], "start": 1690963077235, "stop": 1690963113652, "uuid": "aaafa6f7-ef8f-4ebd-89e4-5d8609033b4a", "historyId": "738632d5cdccc131a1c8e3822eb647e8", "testCaseId": "738632d5cdccc131a1c8e3822eb647e8", "fullName": "testcase.account_creation.test_create_account.TestAccountCreation#test04_create_with_good_password", "labels": [{"name": "feature", "value": "Account Creation"}, {"name": "severity", "value": "critical"}, {"name": "story", "value": "Good_password creation"}, {"name": "parentSuite", "value": "testcase.account_creation"}, {"name": "suite", "value": "test_create_account"}, {"name": "subSuite", "value": "TestAccountCreation"}, {"name": "host", "value": "Joys-MacBook-Pro.local"}, {"name": "thread", "value": "28553-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.account_creation.test_create_account"}]}