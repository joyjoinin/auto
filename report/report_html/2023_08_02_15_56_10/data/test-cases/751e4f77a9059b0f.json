{"uid":"751e4f77a9059b0f","name":"test2_check_all_marketing_rewards_buttons","fullName":"testcase.settings.test_notification.TestNotifications#test2_check_all_marketing_rewards_buttons","historyId":"82012fff534af7a316d21e7ff2360ad6","time":{"start":1690964771139,"stop":1690964805589,"duration":34450},"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_notification.TestNotifications testMethod=test2_check_all_marketing_rewards_buttons>\n\n    @allure.story(\"check all marketing & rewards buttons\")\n    def test2_check_all_marketing_rewards_buttons(self):\n        buttons = [button_breaking_news, button_offers_rewards, button_events, button_push_notifications, button_email]\n>       do.tap_notifications_flow(marketing_rewards, buttons, '0', 'Close all marketing & rewards buttons success')\n\ntestcase/settings/test_notification.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/user_actions.py:759: in tap_notifications_flow\n    self.assert_switch_buttons(\nutils/user_actions.py:819: in assert_switch_buttons\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.user_actions.Actions object at 0x1067c6ca0>\nbuttons = [<utils.locator_info.LocatorInfo object at 0x105f2b040>, <utils.locator_info.LocatorInfo object at 0x105f2b0a0>, <util...2b100>, <utils.locator_info.LocatorInfo object at 0x105f2aee0>, <utils.locator_info.LocatorInfo object at 0x105f2af40>]\nexpected = '0'\n\n    def assert_switch_buttons(self, buttons, expected) -> NoReturn:\n        for i in buttons:\n            try:\n>               assert get_element_by_xpath(self.driver, i, 2).get_attribute('value') == expected\nE               AssertionError\n\nutils/user_actions.py:816: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1690964673857,"stop":1690964673857,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1690964673857,"stop":1690964673857,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1690964673857,"stop":1690964673857,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1690964673858,"stop":1690964673858,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_unittest_setUpClass_fixture_TestNotifications","time":{"start":1690964673858,"stop":1690964673858,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_notification.TestNotifications testMethod=test2_check_all_marketing_rewards_buttons>\n\n    @allure.story(\"check all marketing & rewards buttons\")\n    def test2_check_all_marketing_rewards_buttons(self):\n        buttons = [button_breaking_news, button_offers_rewards, button_events, button_push_notifications, button_email]\n>       do.tap_notifications_flow(marketing_rewards, buttons, '0', 'Close all marketing & rewards buttons success')\n\ntestcase/settings/test_notification.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/user_actions.py:759: in tap_notifications_flow\n    self.assert_switch_buttons(\nutils/user_actions.py:819: in assert_switch_buttons\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.user_actions.Actions object at 0x1067c6ca0>\nbuttons = [<utils.locator_info.LocatorInfo object at 0x105f2b040>, <utils.locator_info.LocatorInfo object at 0x105f2b0a0>, <util...2b100>, <utils.locator_info.LocatorInfo object at 0x105f2aee0>, <utils.locator_info.LocatorInfo object at 0x105f2af40>]\nexpected = '0'\n\n    def assert_switch_buttons(self, buttons, expected) -> NoReturn:\n        for i in buttons:\n            try:\n>               assert get_element_by_xpath(self.driver, i, 2).get_attribute('value') == expected\nE               AssertionError\n\nutils/user_actions.py:816: AssertionError","steps":[],"attachments":[{"uid":"c227eda6438d9f","name":"stdout","source":"c227eda6438d9f.txt","type":"text/plain","size":15}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_TestNotifications::0","time":{"start":1690964908022,"stop":1690964908022,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"severity","value":"critical"},{"name":"story","value":"check all marketing & rewards buttons"},{"name":"feature","value":"Notifications"},{"name":"parentSuite","value":"testcase.settings"},{"name":"suite","value":"test_notification"},{"name":"subSuite","value":"TestNotifications"},{"name":"host","value":"Joys-MacBook-Pro.local"},{"name":"thread","value":"28553-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.settings.test_notification"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"751e4f77a9059b0f.json","parameterValues":[]}