{"uid":"fceafa4323eb961a","name":"test1_login_with_nonexistent_account","fullName":"testcase.login_logout.test_login_with_wrong_info.TestErrorLogin#test1_login_with_nonexistent_account","historyId":"4c86cbd4fcdf50c62f6a6ffceaef0f2c","time":{"start":1689667246722,"stop":1689667259594,"duration":12872},"status":"broken","statusMessage":"TypeError: object of type 'TestAccount' has no len()","statusTrace":"self = <testcase.login_logout.test_login_with_wrong_info.TestErrorLogin testMethod=test1_login_with_nonexistent_account>\n\n    @allure.story(\"login with nonexistent account\")\n    def test1_login_with_nonexistent_account(self) -> None:\n        do.input_email(nonexistent_account)\n        do.tap_next()\n>       do.input_password(nonexistent_account)\n\ntestcase/login_logout/test_login_with_wrong_info.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/user_actions.py:43: in input_password\n    get_element(self.driver, password).clear().send_keys(password_type)\nvenv/lib/python3.9/site-packages/appium/webdriver/webelement.py:234: in send_keys\n    keys = keys_to_typing(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nvalue = (<data.params.TestAccount object at 0x10c49aa30>,)\n\n    def keys_to_typing(value: Iterable[AnyKey]) -> List[str]:\n        \"\"\"Processes the values that will be typed in the element.\"\"\"\n        _typing: List[str] = []\n        for val in value:\n            if isinstance(val, Keys):\n                # Todo: Does this even work?\n                _typing.append(val)\n            elif isinstance(val, (int, float)):\n                val = str(val)\n                for i in range(len(val)):\n                    _typing.append(val[i])\n            else:\n>               for i in range(len(val)):\nE               TypeError: object of type 'TestAccount' has no len()\n\nvenv/lib/python3.9/site-packages/selenium/webdriver/common/utils.py:140: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_TestErrorLogin","time":{"start":1689667234552,"stop":1689667234552,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"afterStages":[{"name":"_unittest_setUpClass_fixture_TestErrorLogin::0","time":{"start":1689667335019,"stop":1689667335019,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"story","value":"login with nonexistent account"},{"name":"feature","value":"Login error"},{"name":"parentSuite","value":"testcase.login_logout"},{"name":"suite","value":"test_login_with_wrong_info"},{"name":"subSuite","value":"TestErrorLogin"},{"name":"host","value":"Joys-MacBook-Pro.local"},{"name":"thread","value":"69288-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.login_logout.test_login_with_wrong_info"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"fceafa4323eb961a.json","parameterValues":[]}